#ifndef FUNCIONESG_H_INCLUDED
#define FUNCIONESG_H_INCLUDED
#include "rlutil.h"
using namespace std;

void ponerCero (int vec[], int tam);
void cargarAleatorio(int vec[], int tam, int limite);
void mostrarVector(int vec[], int tam);

void cargarAleatorioen0(int vec[], int tam, int limite);
void tirardenew(int vec[], int tirardenuevo);
void PonerCeroNuevo(int vec2[] ,int vec[],int tam);
void ordenarVector(int vec[], int tam );

void Volveratirar(int vec[],int x);
void Cuantos(int vec1[],int vecpos[],int x,int qwe);

int twoplayers(char puntajemaximo[],int& puntajemax);
int oneplayer(char puntajemaximo[],int& puntajemax);

void CargarVectorjugador(int vecpuntosj1[],int tam);

void GuardarNumerosRepetidos(int vecvalores[],int vecj1[],int vecrep[],int limite);
bool generala(int vecpuntosj1[],int vecrep[],int limite);
bool poker(int vecpuntosj1[],int vecrep[],int limite);
bool full(int vecpuntosj1[],int vecrep[],int limite);
bool escalera(int vecpuntosj1[],int vecrep[],int limite);
void MostrarPdisponible(int vectorpuntosj1[], int vecrep[],int limite);
void AsignarPdisponible(int vecpuntosj1[],int vecrep[],bool esca, bool ful,bool po, bool gene);
void mostrarVectorTabla(int vec[], int tam);
void mostrarVectorTabla1(int vec[], int tam);

int sumarVectorjugadores(int vec[], int tam );///sumador de NO-1

int oneplayer(char puntajemaximo[],int& puntajemax){

system("cls");

int i, opc,tirardenuevo,pos ;
int rondas, Crondas=0, Ctiros=0, puntos=0,Ctirostot=0;
const int tam= 5, limite =6;
int vectorj1 [5];
int vectorposicion[5];
int vectorvalores [6]= {1,2,3,4,5,6};
int vectorep [6];
int vectorpuntosj1 [10];
char siono, Vtirar;
char jugador1[30];


CargarVectorjugador(vectorpuntosj1,10);
    rlutil::locate(4,2);
    cout<<"-------------------*******--------XD-------*******-----------------------"<<endl;
    rlutil::locate(4,3);
    cout<<"---------------------*****BIENVENIDO--A--LA*****-------------------------"<<endl;
    rlutil::locate(4,4);
    cout<<"--------------------------****GENERALA****-------------------------------"<<endl;
    rlutil::locate(4,5);
    cout<<"---------------------------------***-------------------------------------"<<endl;
    rlutil::locate(4,6);
    cout<<"------------------------1-JUGADOR/SOLITARIO------------------------------"<<endl;
    rlutil::locate(4,7);
    cout<<"-------------------------------------------------------------------------"<<endl;
    rlutil::locate(4,8);
    cout << "JUGADOR 1 INGRESE SU NOMBRE:"<<endl;
    rlutil::locate(4,9);
    cout<<"-------------------------------------------------------------------------"<<endl;
    rlutil::locate(4,10);
    cin.getline(jugador1,30,'\n');
    rlutil::locate(4,11);
    cout<<"-------------------------------------------------------------------------"<<endl;
    rlutil::locate(4,12);
    cout << "¿CUANTAS RONDAS QUIERE JUGAR? (10-MAX)"<<endl;
    rlutil::locate(4,13);
    cin >> rondas ;
    rlutil::locate(4,14);
    cout<<"---------------------------------------------------------------------"<<endl;
    system ("cls");

    for (i=1;i<=rondas;i++){
            Crondas+=1;
            Ctiros=0;
                    rlutil::locate(4,2);
                    cout<<"--------------------------------------------------"<<endl;
                    rlutil::locate(4,3);
                    cout<<"---------------RONDA: "<<Crondas<<"--------------------------"<<endl;
                    rlutil::locate(4,4);
                    cout<<"-------------LANZAMIENTOS:"<<Ctirostot <<"----------------------"<<endl;
                    rlutil::locate(4,5);
                    cout<<"------------PUNTAJE ACUMULADO:"<<sumarVectorjugadores(vectorpuntosj1,10) <<"------------------"<<endl;
                    rlutil::locate(4,6);
                    cout<<"--------------------------------------------------"<<endl;

        system("pause");
        system ("cls");
            Ctiros+=1;
            Ctirostot+=1;

            int y=0;
            int qw=1;

        while (qw!=0){

                rlutil::locate(2,6+y);
        std::cout<<(char)175<<std::endl;

        rlutil::locate(4,2);
        cout<< "----------NOMBRE: "<< jugador1 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj1,10) <<"----- "<<endl;
        rlutil::locate(4,3);
        cout << "----------RONDA NUMERO #"<<Crondas<<"-------"<<"TIRO #"<<Ctiros<<"-------------------"<<endl;
        rlutil::locate(4,4);
        cout << "----------COMENZAR TIRO DE DADOS ?  SI / NO --------------" <<endl;
        rlutil::locate(4,5);
        cout<< "----------------------------------------------------------"<<endl;
        rlutil::locate(4,6);
        cout <<" SI "<<endl;
        rlutil::locate(4,7);
        cout <<" NO "<<endl;

switch(rlutil::getkey()){
    case 14: ///UP

        rlutil::locate(2,6+y);
        std::cout<<"  "<<std::endl;
        y--;
        if(y<0){
        y=0;}
    break;
        case 15: ///DOWN
            rlutil::locate(2,6+y);
        std::cout<<"  "<<std::endl;
        y++;
        if(y>1){
        y=1;}
    break;
case 1:   ///ENTER

    switch (y){
    case 0:  ///CASO SI

                rlutil::locate(4,8);
                cout<<"--------------------------------------"<<endl;
                rlutil::locate(4,9);
                cout <<"---"<<jugador1<<" TUS DADOS SON:"<<endl;
                rlutil::locate(4,10);
                cout<<"--------------------------------------"<<endl;
                ponerCero(vectorj1, 5);
                cargarAleatorio(vectorj1, 5, 6);
                mostrarVector(vectorj1, 5);
                int a;

            for (a=1;a<=2;a++){

                    int u=0,b,qwe=1;



            while (qwe!=0){

                rlutil::locate(2,19+u);
                std::cout<<(char)175<<std::endl;

                    rlutil::locate(4,16);
                    cout<<"---------------------------------------------------------------------------------------------"<<endl;
                    rlutil::locate(4,17);
                    cout<<"--------QUIERE VOLVER A TIRAR?---->  SI  <--|-->  NO  <---QUEDARSE CON LO OBTENIDO?----------"<<endl;
                    rlutil::locate(4,18);
                    cout<<"---------------------------------------------------------------------------------------------"<<endl;
                    rlutil::locate(4,19);
                    cout<<" SI "<<endl;
                    rlutil::locate(4,20);
                    cout<<" NO "<<endl;


            switch(rlutil::getkey()){
    case 14: ///UP

        rlutil::locate(2,19+u);
        std::cout<<"  "<<std::endl;
        u--;
        if(u<0){
        u=0;}
    break;
        case 15: ///DOWN
            rlutil::locate(2,19+u);
        std::cout<<"  "<<std::endl;
        u++;
        if(u>1){
        u=1;}
    break;
            case 1:   ///ENTER

    switch (u){
            case 0:  ///CASO SI

            Ctirostot+=1;
                    Ctiros+=1;
                    system("cls");
                        rlutil::locate(4,2);
                        cout<< "---------------------------------------------------------------------------------------"<<endl;
                        rlutil::locate(4,3);
                        cout<< "----------NOMBRE: "<< jugador1 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj1,10) <<"--------------- "<<endl;
                        rlutil::locate(4,4);
                        cout << "-------RONDA NUMERO #"<<Crondas << "------" << "TIRO #" << Ctiros <<"----------------"<<endl;
                        rlutil::locate(4,5);
                        cout<< "--------------------------------------------"<<endl;
                        rlutil::locate(4,6);
                        cout<< "la mano anterior era:"<<endl;

                        mostrarVector(vectorj1,5);

                        Cuantos(vectorj1,vectorposicion,6,qwe);

                        cargarAleatorioen0(vectorj1,5,6);

                        system("cls");
                        rlutil::locate(4,2);
                        cout<< "---------------------------------------------------------------------------------------"<<endl;
                        rlutil::locate(4,3);
                        cout<< "----------NOMBRE: "<< jugador1 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj1,10) <<"--------------- "<<endl;
                        rlutil::locate(4,4);
                        cout << "-------RONDA NUMERO #"<<Crondas << "------" << "TIRO #" << Ctiros <<"----------------"<<endl;
                        rlutil::locate(4,5);
                        cout<< "--------------------------------------------"<<endl;
                        rlutil::locate(4,6);
                        cout<< "LA NUEVA MANO AHORA ES:"<<endl;
                        mostrarVector(vectorj1,5);

    if (Ctiros==3){
                qwe=0;
                qw=0;
                a=2;
            }


    break;
    case 1:
        cout<<"SALGO NOMAAS"<<endl;
    qwe=0;
    qw=0;
    a=2;///CASO NO

break;}
} /// switch u

}///while qwe

}
    case 1:

    qw=0;
    a=2;
        break;
 }

                        }

        }///SWITCH SIONO
                    system("pause");
                    system ("cls");
                    rlutil::locate(4,2);
                    cout <<"---------------------------------***---------------------------------"<<endl;
                    rlutil::locate(4,3);
                    cout <<"-----------------***TABLA DE POSIBLES PUNTAJES***--------------------"<<endl;
                    rlutil::locate(4,4);
                    cout <<"---------------------------------***---------------------------------"<<endl;
                    GuardarNumerosRepetidos(vectorvalores,vectorj1,vectorep,limite);
                    bool gen=false; bool pok=false; bool ful=false;bool esc=false;
                    esc=escalera(vectorpuntosj1,vectorep,limite);
                    ful=full(vectorpuntosj1,vectorep,limite);
                    pok=poker(vectorpuntosj1,vectorep,limite);
                    gen=generala(vectorpuntosj1,vectorep,limite);
                    ///cout<<" generala:"<<gen<<" poker:"<<pok<<" full:"<<ful<<" esc:"<<esc<<endl;
                    AsignarPdisponible(vectorpuntosj1,vectorep,esc,ful,pok,gen);





}///FOR DE LAS RONDAS

int Puntajefinal;
Puntajefinal=sumarVectorjugadores(vectorpuntosj1,10);


if (Puntajefinal>puntajemax){
    puntajemax=Puntajefinal;
    strcpy(puntajemaximo,jugador1);
    cout<<"----------------------------------------------------------------------"<<endl;
    cout<<"---------------------*****FINAL DEL JUEGO***** -----------------------"<<endl;
    cout<<"---*****FELICIDADES!! HA ROTO EL RECORD ACTUAL DE 1 JUGADOR!!*****---"<<endl;
    cout<<"------NOMBRE: "<< puntajemaximo<<" ---PUNTAJE MAXIMO "<<puntajemax<<"  --------------"<<endl;
    cout<<" -----ESPERO QUE VUELVAS A INTENTARLO PRONTO :D ----------------"<<endl;
    cout<<"---------------------------****FIN****----------------------------------"<<endl;}
else {
    cout<<"----------------------------------------------------------------------"<<endl;
    cout<<"---------------------*****FINAL DEL JUEGO***** -----------------------"<<endl;
    cout<<"--MUCHAS GRACIAS POR JUGAR:"<< jugador1<<" TU PUNTAJE TOTAL FUE DE:"<<Puntajefinal<<"  -----------"<<endl;
    cout<<"--ESPERO QUE VUELVAS A INTENTARLO PRONTO Y TE SUPERES :D "<<endl;
    cout<<"---------------------------****FIN****----------------------------------"<<endl;
}


system ("pause");
/// GUARDO EL PUNTAJE MAXIMO Y EL NOMBRE DEL QUE TIENE EL RECORD
///cout <<"puntajemaximo: "<<puntajemaximo<<"   puntajemax:"<<puntajemax<<endl;
system("cls");
cin.ignore();
}/// DE LA FUNCION








/*
int twoplayers(char puntajemaximo[],int &puntajemax){

system("cls");

int i, opc,tirardenuevo;
int rondas, Crondas=0, Ctiros=0, Ctirostot=0,Ctirostot2=0;
int puntos1=0, puntos2=0;
const int tam= 5, limite =6, tamju =10;
int vectorj1 [5], vectorj2 [5];
int vectorposicion [5];
int vectorvalores [6]= {1,2,3,4,5,6};
int vectorep [6];
int vectorpuntosj1 [10];
int vectorpuntosj2 [10];
char siono, Vtirar;
char jugador1[30];
char jugador2[30];


CargarVectorjugador(vectorpuntosj1,10);
CargarVectorjugador(vectorpuntosj2,10);
    cout<<"-------------------*******--------XD-------*******-----------------------"<<endl;
    cout<<"---------------------*****BIENVENIDO--A--LA*****-------------------------"<<endl;
    cout<<"--------------------------****GENERALA****-------------------------------"<<endl;
    cout<<"---------------------------------***-------------------------------------"<<endl;
    cout<<"----------------------------2-JUGADORES/RAS------------------------------"<<endl;
    cout<<"-------------------------------------------------------------------------"<<endl;
    cout << "JUGADOR 1 INGRESE SU NOMBRE:"<<endl;
    cin.getline(jugador1,30,'\n');
    cout<<"-------------------------------------------------------------------"<<endl;
    cout << "JUGADOR 2 INGRESE SU NOMBRE:"<<endl;
    cin.getline(jugador2,30,'\n');
    cout<< "------------------------------------------------------------------"<<endl;
    cout << "¿CUANTAS RONDAS QUIEREN JUGAR? (10-MAX)"<<endl;
    cin >> rondas ;

    int rondasdobles;
    rondasdobles=rondas*2;
    cout<<"rondas dobles:"<<rondasdobles<<endl;

    system ("cls");
    for (i=1;i<=rondasdobles;i++){

            Crondas+=1;
            Ctiros=0;

            if (i%2!=0){

                    cout<<"------------------------------------------------------"<<endl;
                    cout<<"---------------RONDA: "<<Crondas<<"-------------------------------"<<endl;
                    cout<<"-----------PROXIMO TURNO:"<<jugador1<<"----------------"<<endl;
                    cout<<"-------------LANZAMIENTOS:"<< Ctirostot <<"----------------------------"<<endl;
                    cout<<"---------PUNTAJE - JUGADOR 1 "<<jugador1<<":"<<sumarVectorjugadores(vectorpuntosj1,10)<<" PUNTOS ---------------------"<<endl;
                    cout<<"---------PUNTAJE - JUGADOR 2 "<<jugador2<<":"<<sumarVectorjugadores(vectorpuntosj2,10)<<" PUNTOS ---------------------"<<endl;
                    cout<<"------------------------------------------------------"<<endl;

        system("pause");
        system ("cls");

            Ctiros+=1;
            Ctirostot+=1;
        cout<< "--------------------------------------------------------------------------------------------"<<endl;
        cout<< "----------NOMBRE: "<< jugador1 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj1,10) <<"------------ "<<endl;
        cout << "----------RONDA NUMERO #"<<Crondas<<"-------"<<"TIRO #"<<Ctiros<<"-------------TIROS TOTALES:"<<Ctirostot<<"-------------------------"<<endl;
        cout << "----------COMENZAR TIRO DE DADOS ?   S / N  -------------------" <<endl;
        cout<< "--------------------------------------------------------------------------------------------"<<endl;
        cin >> siono;


        switch (siono){
            case 's':
            case  'S':
                cout<<"--------------------------------------"<<endl;
                cout <<"---"<<jugador1<<" TUS DADOS SON:"<<endl;
                cout<<"--------------------------------------"<<endl;
                ponerCero(vectorj1, 5);
                cargarAleatorio(vectorj1, 5, 6);
                mostrarVector(vectorj1, 5);
                int a;
            for (a=1;a<=2;a++){

                    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
                    cout << "---------QUIERE VOLVER A TIRAR?---->  S  <--|-->  N  <---QUEDARSE CON LO OBTENIDO? ----------"<<endl;
                    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
                    cin >>  Vtirar;

                                system ("cls");
                switch(Vtirar){
                    case 's' :
                    case 'S' :
                    Ctirostot+=1;
                    Ctiros+=1;
                        cout<< "---------------------------------------------------------------------------------------"<<endl;
                        cout<< "----------NOMBRE: "<< jugador1 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj1,10) <<"--------------- "<<endl;
                        cout << "-------RONDA NUMERO #"<<Crondas << "------" << "TIRO #" << Ctiros <<"-----------TIROS TOTALES:"<<Ctirostot<<"-----------"<<endl;
                        cout<< "---------------------------------------------------------------------------------------"<<endl;
                        cout<< "LA MANO ANTERIOR ERA:"<<endl;
                        mostrarVector(vectorj1,5);
                        cout<< "--------------------------------------------"<<endl;
                        cout << "--------->CUANTOS DADOS QUIERE VOLVER A TIRAR?<----------"  <<endl;
                        cin >> tirardenuevo;
                        cout<< "--------------------------------------------"<<endl;
                        cout << "CUALES DADOS ? MENCIONELOS (LOS MISMOS ESTAN EN ORDEN DESCENDENTE DEL #1 AL #5)"<<endl;

                        ponerCero(vectorposicion, 5);
                        tirardenew(vectorposicion, tirardenuevo);/// GUARDO LAS POSICION DE LOS QUE SE QUIEREN VOLVER A TIRAR

                system("cls");
                        ///PODRIA MOSTRAR VECTOR POSICION  PARA CORROBORAR LOS DADOS QUE ELIGIO TIRAR SI VALEN !=0
                        cout<< "------------------------------------------------------------------------------------"<<endl;
                        cout<< "----------NOMBRE: "<< jugador1 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj1,10) <<"----------- "<<endl;
                        cout << "-------RONDA NUMERO #"<<Crondas<<"------"<<"TIRO #"<<Ctiros<<"-----------TIROS TOTALES:"<<Ctirostot<<"----------"<<endl;
                        cout<< "----------------------------------------------------------------------------------------"<<endl;
                        cout<< "LA MANO ANTERIOR ERA :"<<endl;
                        mostrarVector(vectorj1,5);
                        PonerCeroNuevo(vectorposicion,vectorj1,5);/// Los pongo en 0 en el vector 1 0.
                        cargarAleatorioen0(vectorj1, 5, 6); ///  Cargo los del vector 1 en 0 de nuevo :D

                        cout << "LA NUEVA MANO OBTENIDA DEL TIRO  #"<<Ctiros<<" ES: ---------------------------------"<<endl;
                        mostrarVector(vectorj1, 5);

                break;
                    case 'n':
                    case  'N':

                        a+=1;
                    break;
                        }/// SWITCH DE TIROS

                    }

                    case 'n':
                    case 'N':

                        system ("pause");
                        system("cls");
                        break;

        }///SWITCH SIONO
                    cout <<"---------------------------------***---------------------------------"<<endl;
                    cout <<"-----------------***TABLA DE POSIBLES PUNTAJES***--------------------"<<endl;
                    cout <<"---------------------------------***---------------------------------"<<endl;
                    GuardarNumerosRepetidos(vectorvalores,vectorj1,vectorep,limite);
                    bool gen=false; bool pok=false; bool ful=false;bool esc=false;
                    esc=escalera(vectorpuntosj2,vectorep,limite);
                    ful=full(vectorpuntosj2,vectorep,limite);
                    pok=poker(vectorpuntosj2,vectorep,limite);
                    gen=generala(vectorpuntosj2,vectorep,limite);
                    ///cout<<" generala:"<<gen<<" poker:"<<pok<<" full:"<<ful<<" esc:"<<esc<<endl;
                    AsignarPdisponible(vectorpuntosj1,vectorep,esc,ful,pok,gen);
                    Crondas-=1;
                                    }
            else {



            Ctiros=0;
                    cout<<"-------------------------------------------------------------------------------------"<<endl;
                    cout<<"----------------RONDA: "<<Crondas<<"----------------------------------"<<endl;
                    cout<<"---------PROXIMO TURNO:"<<jugador2<<"---------------------------------"<<endl;
                    cout<<"-------------LANZAMIENTOS:"<< Ctirostot2 <<"-----------------------------"<<endl;
                    cout<<"---------PUNTAJE "<<jugador1<<":"<<sumarVectorjugadores(vectorpuntosj1,10)<<" PUNTOS ---------------------"<<endl;
                    cout<<"---------PUNTAJE "<<jugador2<<":"<<sumarVectorjugadores(vectorpuntosj2,10)<<" PUNTOS ---------------------"<<endl;
                    cout<<"--------------------------------------------------------------------------------------"<<endl;

        system("pause");
        system ("cls");
            Ctiros+=1;
            Ctirostot2+=1;
        cout<< "------------------------------------------------------------------------------------"<<endl;
        cout<< "----------NOMBRE: "<< jugador2 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj2,10) <<"-------------------------------"<<endl;
        cout << "----------RONDA NUMERO #"<<Crondas<<"-------"<<"TIRO #"<<Ctiros<<"--------TIROS TOTALES:"<<Ctirostot2<<"------------------------"<<endl;
        cout << "----------COMENZAR TIRO DE DADOS ?   S / N  --------------" <<endl;
        cout<< "------------------------------------------------------------------------------------"<<endl;
        cin >> siono;


        switch (siono){
            case 's':
            case  'S':
                cout<<"--------------------------------------"<<endl;
                cout <<"---"<<jugador2<<" TUS DADOS SON:"<<endl;
                ponerCero(vectorj2, 5);
                cargarAleatorio(vectorj2, 5, 6);
                mostrarVector(vectorj2, 5);
                int a;
            for (a=1;a<=2;a++){

                    cout <<"---------------------------------------------------------------------------------------------"<<endl;
                    cout <<"---------QUIERE VOLVER A TIRAR?---->  S  <--|-->  N  <---QUEDARSE CON LO OBTENIDO? ----------"<<endl;
                    cout <<"---------------------------------------------------------------------------------------------"<<endl;
                    cin >>  Vtirar;

                                system ("cls");
                switch(Vtirar){
                    case 's' :
                    case 'S' :
                    Ctirostot2+=1;
                    Ctiros+=1;
                        cout<<"--------------------------------------------------------------------------------------------------------------------------"<<endl;
                        cout<<"----------NOMBRE: "<< jugador2 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj2,10) <<"-------------------------"<<endl;
                        cout<<"-------RONDA NUMERO #"<<Crondas <<"------"<< "TIRO #"<< Ctiros<<"------------TIROS TOTALES:"<<Ctirostot2<<"---------------"<<endl;
                        cout<<"--------------------------------------------------------------------------------------------------------------------------"<<endl;
                        cout<<"LA MANO ANTERIOR ERA:"<<endl;
                        mostrarVector(vectorj2,5);
                        cout<< "----------------------------------------------------------"<<endl;
                        cout << "--------->CUANTOS DADOS QUIERE VOLVER A TIRAR?<----------"  <<endl;
                        cin >> tirardenuevo;
                        cout<< "----------------------------------------------------------"<<endl;
                        cout << "CUALES DADOS ? MENCIONELOS (LOS MISMOS ESTAN EN ORDEN DESCENDENTE DEL #1 AL #5)"<<endl;

                        ponerCero(vectorposicion, 5);
                        tirardenew(vectorposicion, tirardenuevo);

                system("cls");

                        cout<<"-------------------------------------------------------------------------------------------------------------"<<endl;
                        cout<<"----------NOMBRE: "<< jugador2 <<"   ------PUNTOS:"<< sumarVectorjugadores(vectorpuntosj2,10) <<"----------- "<<endl;
                        cout<<"-------RONDA NUMERO #"<<Crondas<<"------"<<"TIRO #"<<Ctiros<<"------TIROS TOTALES:"<<Ctirostot2<<"-----------"<<endl;
                        cout<<"-------------------------------------------------------------------------------------------------------------"<<endl;
                        cout<< "LA MANO ANTERIOR ERA :"<<endl;
                        mostrarVector(vectorj2,5);
                        PonerCeroNuevo(vectorposicion,vectorj2,5);/// Los pongo en 0 en el vector 1 0.
                        cargarAleatorioen0(vectorj2, 5, 6);

                        cout << "LA NUEVA MANO OBTENIDA DEL TIRO  #"<<Ctiros<<" ES: ---------------------------------"<<endl;
                        mostrarVector(vectorj2, 5);

                break;
                    case 'n':
                    case  'N':

                        a+=1;
                    break;
                        }/// SWITCH DE TIROS

}


                    case 'n':
                    case 'N':

                        break;


        }///SWITCH SIONO
                    cout <<"---------------------------------***---------------------------------"<<endl;
                    cout <<"-----------------***TABLA DE POSIBLES PUNTAJES***--------------------"<<endl;
                    cout <<"---------------------------------***---------------------------------"<<endl;
                    GuardarNumerosRepetidos(vectorvalores,vectorj2,vectorep,limite);
                    bool gen=false; bool pok=false; bool ful=false;bool esc=false;
                    esc=escalera(vectorpuntosj2,vectorep,limite);
                    ful=full(vectorpuntosj2,vectorep,limite);
                    pok=poker(vectorpuntosj2,vectorep,limite);
                    gen=generala(vectorpuntosj2,vectorep,limite);
                    ///cout<<" generala:"<<gen<<" poker:"<<pok<<" full:"<<ful<<" esc:"<<esc<<endl;
                    AsignarPdisponible(vectorpuntosj2,vectorep,esc,ful,pok,gen);


}
}/// DE LAS RONDAS
    system ("pause");


int Puntajefinal1,Puntajefinal2,mayorpuntaje;
Puntajefinal1=sumarVectorjugadores(vectorpuntosj1,10);
 Puntajefinal2 =sumarVectorjugadores(vectorpuntosj2,10);
cout<<"----------------------------------------------------------------------------------------------"<<endl;
cout<<"------------ PUNTAJE FINAL JUGADOR 1:"<<Puntajefinal1<<" PUNTAJE FINAL JUGADOR 2:"<<Puntajefinal2<<"-----------"<<endl;
if(Puntajefinal1>Puntajefinal2){
    mayorpuntaje=Puntajefinal1;
    strcpy(puntajemaximo,jugador1);
    cout<<"----------------------------------------------------------------------------------------"<<endl;
    cout<<"-------------------EL/LA GANADOR ES:"<< jugador1<<"!!!!!!!!-------------------------"<<endl;
    cout<<"----------------------*****FELICITACIONES POR HABER GANADO*****-------------------------"<<endl;}

else {mayorpuntaje=Puntajefinal2;
    strcpy(puntajemaximo,jugador2);
    cout<<"--------------------------------------------------------------------------------------"<<endl;
    cout<<"-------------------EL/LA GANADOR ES:!!!!***"<< jugador2<<"***!!!!---------------------"<<endl;
    cout<<"-----------------FELICITACIONES POR HABER GANADO--------------------------------------"<<endl;}


if (mayorpuntaje>puntajemax){
    puntajemax=mayorpuntaje;

    cout<<"----------------------------------------------------------------------"<<endl;
    cout<<"---------------------*****FINAL DEL JUEGO***** -----------------------"<<endl;
    cout<<"---*****FELICIDADES!! HA ROTO EL RECORD ACTUAL DE 2 JUGADORES!!*****---"<<endl;
    cout<<"------NOMBRE: "<< puntajemaximo<<" ---PUNTAJE MAXIMO "<<puntajemax<<"  --------------"<<endl;
    cout<<"-------ESPERO QUE VUELVAS A INTENTARLO PRONTO Y ROMPAS TU PROPIO RECORD-------"<<endl;
    cout<<"------------------------------****FIN****-------------------------------------"<<endl;;}
else {
    cout<<"----------------------------------------------------------------------"<<endl;
    cout<<"---------------------*****FINAL DEL JUEGO***** -----------------------"<<endl;
    cout<<"--MUCHAS GRACIAS POR JUGAR:"<< puntajemaximo <<" TU PUNTAJE TOTAL FUE DE:"<<mayorpuntaje<<"  -----------"<<endl;
    cout<<"-------ESPERO QUE VUELVAS A INTENTARLO PRONTO Y ROMPAS EL ACTUAL RECORD-------"<<endl;
    cout<<"------------------------------****FIN****-------------------------------------"<<endl;}

system("pause");

*/


void Cuantos(int vec1[],int vecpos[],int x,int qwe){
    bool a=true, b=true;
    int y=0, tirar,aux=0,tiros;
while (a==true){


rlutil::setColor(rlutil::WHITE);
rlutil::hidecursor();
rlutil::locate(2,19+y);

std::cout<<(char)175<<std::endl;

                    rlutil::locate(4,16);
                    cout<<"---------------------------------------------------------------------------------------------"<<endl;
                    rlutil::locate(4,17);
                    cout<<"---------CUANTOS DADOS QUIERE VOLVER A TIRAR? ----------"<<endl;
                    rlutil::locate(4,18);
                    cout<<"---------------------------------------------------------------------------------------------"<<endl;
                    rlutil::locate(4,19);
                    cout<<" 1 (UNO) "<<endl;
                    rlutil::locate(4,20);
                    cout<<" 2 (DOS)"<<endl;
                     rlutil::locate(4,21);
                    cout<<" 3 (TRES)"<<endl;
                     rlutil::locate(4,22);
                    cout<<" 4 (CUATRO)"<<endl;
                     rlutil::locate(4,23);
                    cout<<" 5 (CINCO)"<<endl;

switch(rlutil::getkey()){

case 14: ///UP
rlutil::locate(2,19+y);
std::cout<<"  "<<std::endl;
    y--;
    if(y<0){
        y=0;}

    break;
case 15: ///DOWN
rlutil::locate(2,19+y);
std::cout<<"  "<<std::endl;
    y++;
    if(y>4){
        y=4;}

    break;
case 1: ///ENTER
tirar=y+1;

int j=0;
while (tiros!=3){


rlutil::hidecursor();
rlutil::locate(2,27+j);
std::cout<<(char)175<<std::endl;

            rlutil::locate(4,24);
            cout << "------------------------------------------------------------------------------"<<endl;
             rlutil::locate(4,25);
            cout << "CUALES DADOS ? MENCIONELOS (LOS MISMOS ESTAN EN ORDEN DESCENDENTE DEL #1 AL #5"<<endl;
             rlutil::locate(4,26);
            cout << "------------------tirar---"<<tirar<<"---------------------------------------------------------"<<endl;

            rlutil::locate(4,27);
            cout<<" #1 POSICION"<<endl;
            rlutil::locate(4,28);
            cout<<" #2 POSICION"<<endl;
            rlutil::locate(4,29);
            cout<<" #3 POSICION"<<endl;
            rlutil::locate(4,30);
            cout<<" #4 POSICION"<<endl;
            rlutil::locate(4,31);
            cout<<" #5 POSICION"<<endl;



        switch(rlutil::getkey()){

case 14: ///UP
rlutil::locate(2,27+j);
std::cout<<"  "<<std::endl;
    j--;
    if(j<0){
        j=0;}
    break;
case 15: ///DOWN
rlutil::locate(2,27+j);
std::cout<<"  "<<std::endl;
    j++;
    if(j>4){
        j=4;}
    break;
case 1: ///ENTER
  ///j+1 es el valor del dado que se va a cambiar
    cout <<" JOTA VALE:"<< j<<endl;
    rlutil::locate(20,27+j);
    cout<< "LA POSICION YA FUE AGREGADA, PROSIGA INDICANDO LA SIGUIENTE"<<endl;
    vec1[j]=0;
    aux+=1;
    if(tirar==aux){
    a=false;
    tiros=3;
    qwe=0;}
    break;
        }}

///while b

}/// switch cuantos
} ///while a true

}



/*


void Volveratirar(int vec[],int x){
    bool a=true;
    int y;
while (a==true){


rlutil::setColor(rlutil::WHITE);
rlutil::hidecursor();
rlutil::locate(2,19+y);

std::cout<<(char)175<<std::endl;

                    rlutil::locate(4,16);
                    cout<<"---------------------------------------------------------------------------------------------"<<endl;
                    rlutil::locate(4,17);
                    cout<<"---------QUIERE VOLVER A TIRAR?---->  S  <--|-->  N  <---QUEDARSE CON LO OBTENIDO? ----------"<<endl;
                    rlutil::locate(4,18);
                    cout<<"---------------------------------------------------------------------------------------------"<<endl;
                    rlutil::locate(4,19);
                    cout<<" SI "<<endl;
                    rlutil::locate(4,20);
                    cout<<" NO "<<endl;

switch(rlutil::getkey()){

case 14: ///UP

rlutil::locate(2,19+y);
std::cout<<"  "<<std::endl;
    y--;
    if(y<0){
        y=0;
    }
    break;
case 15: ///DOWN

rlutil::locate(2,19+y);
std::cout<<"  "<<std::endl;
    y++;
    if(y>1){
        y=1;
    }
    break;
case 1: ///ENTER

    switch (y){
case 0:

   break;
case 1:

    break;
case 2:

    break;
case 3:
     a=false;
    break;
        }
}



}


}

*/


void ponerCero(int vec[],int tam){
    int i;
    for(i=0;i<tam;i++){
        vec[i]=0;
    }
}

void cargarAleatorio(int vec[], int tam, int limite){
  int i;
  srand(time(NULL));
  for( i=0; i<tam; i++ ){
        vec[i]=(rand()%limite)+1;
  }
}

void mostrarVector(int vec[], int tam){
    int i;
    for(i=0;i<tam;i++){
        cout << vec[i]<<endl;
    }
}


void cargarAleatorioen0(int vec[], int tam, int limite){
  int i;
  srand(time(NULL));
  for( i=0; i<tam; i++ ){
        if (vec[i]==0){
        vec[i]=(rand()%limite)+1;}}
}

/// FUNCION PARA PONER EN 0 LOS VALORES DEL VECTOR1 QUE ESTEN EN REPRESENTADOS POR POSICION EN EL VECTOR2
void PonerCeroNuevo(int vec2[], int vec[],int tam){
    int i, pos=0;
            for (i=0; i<tam;i++){
                if (vec2[i]!=0){
                    pos=vec2[i];
                    vec[pos-1]=0;}}
}

///ORDENAR VECTOR

void ordenarVector(int v[], int tam ){
    int i,j, posmin, aux;
    for(i=0;i<tam-1;i++){
        posmin=i;
        for(j=i+1;j<tam;j++){
            if(v[j]<v[posmin]) posmin=j;
        }
        aux=v[i];
        v[i]=v[posmin];
        v[posmin]=aux;
    }
}
/// GUARDAR LOS REPETIDOS EN VECREP

void GuardarNumerosRepetidos(int vecvalores[],int vecj1[],int vecrep[],int limite){
        int i,e;
        ponerCero(vecrep,6);
        for (i=0;i<limite;i++){
            for(e=0;e<5;e++)
                if (vecvalores[i]==vecj1[e]){
                    vecrep[i]+=1;
            }
        }
}

bool generala(int vecpuntosj1[],int vecrep[],int limite){
        int i;
        for (i=0; i<limite;i++){
                if (vecrep[i]==5){
                    if(vecpuntosj1[9]==-1){
                        rlutil::locate(4,14);
                        cout<<"--- *****PODEMOS ANOTAR GENERALA! #10 POR 50 ****** ------------------"<<endl;
                        return true;}}
                        }
                        return false;
                    }

bool poker(int vecpuntosj1[],int vecrep[],int limite){
        int i;
        for (i=0; i<limite;i++){
            if (vecrep[i]==4){
                if(vecpuntosj1[8]==-1){
                    rlutil::locate(4,13);
                    cout<< "--- ****PODEMOS ANOTAR POKER! #9 POR 40 **** ------------------"<<endl;
                    return true;}}
                        }
                    return false;
                    }

bool full(int vecpuntosj1[],int vecrep[],int limite){
        int i; int fu=0, Cfu=0;


        for (i=0; i<limite;i++){

            if (vecrep[i]==3){
                fu+=1;}
            if (vecrep[i]==2){
                Cfu+=1;
            if (Cfu==1){
                fu+=1;}
                        }}

            if (fu==2){
                if(vecpuntosj1[7]==-1){
                    rlutil::locate(4,12);
                    cout<< "--- ***PODEMOS ANOTAR FULL! #8 POR 30 *** -------------------"<<endl;
                    return true;}}
            else return false;
                    }




bool escalera(int vecpuntosj1[],int vecrep[],int limite){
    int i, Corden=0;
        for (i=0;i<limite;i++){
            if(vecrep[i]==1){
                Corden+=1;}}

    if (Corden==5){
        if(vecrep[0]==0||vecrep[5]==0){
            if(vecpuntosj1[6]==-1){
            rlutil::locate(4,11);
            cout <<"--- **PODEMOS ANOTAR ESCALERA! #7 ** --------------------------"<<endl;
            return true;}}}
    else
        return false;
            }

/*
void MostrarPdisponible(int vectorpuntosj1[], int vecrep[],int limite){
        int i,valor;
        for (i=0;i<limite;i++){
            if (vecrep[i]!=0){
                if (vectorpuntosj1[i]==-1){
                    valor=vecrep[i]*(i+1);
                    cout <<"--- PODEMOS ASIGNAR VALOR EN EL #"<<i+1<<" POR "<< valor<<"   ---------------------"<<endl;}
            }}
                }
*/
void AsignarPdisponible(int vecpuntosj1[],int vecrep[],bool esca,bool ful, bool po, bool gene){
    int asigna,valor,y=0,valor2;
            int i,o=1;

            while (o!=0){
            int e=5;
                for (i=0;i<6;i++){
                if (vecrep[i]!=0){
                    if (vecpuntosj1[i]==-1){
                    valor=vecrep[i]*(i+1);
                    rlutil::locate(4,e+i);
                    std::cout <<"--- PODEMOS ASIGNAR VALOR EN EL #"<<i+1<<" POR "<< valor<<"   ---------------------"<<std::endl;
                    ;}
            }}
            rlutil::locate(4,15);
            cout <<"--- MENU PARA TACHARSE UN JUEGO #0  ---------------------------"<<endl;


rlutil::locate(2,5+y);

    std::cout<<(char)175<<std::endl;


switch(rlutil::getkey()){
case 14: ///UP

rlutil::locate(2,5+y);
std::cout<<"  "<<std::endl;
    y--;
    if(y<0){
        y=0;
    }
    break;
case 15: ///DOWN

rlutil::locate(2,5+y);
std::cout<<"  "<<std::endl;
    y++;
    if(y>10){
        y=10;
    }
    break;
case 1:

    switch (y){
default:
    valor2= vecrep[y]*(y+1); ///ASI OBTENEMOS EL PUNTAJE
    if (vecpuntosj1[y]==-1){
    vecpuntosj1[y]=valor2;}

    o=0;

    break;

case 6:
                        if (esca==true){
                    if (vecpuntosj1[6]==-1){
                        vecpuntosj1[6]=25;
                        rlutil::locate(4,16);
                    cout<< "---------------------------***^***------------------------------"<<endl;
                    rlutil::locate(4,17);
                    cout<< "--------------ENHORABUENA HA ANOTADO ESCALERA!------------------"<<endl;
                    rlutil::locate(4,18);
                    cout<< "---------------------------***^***------------------------------"<<endl;
                    }}

    o=0;
   break;
case 7:
                     if (ful==true){
                    if (vecpuntosj1[7]==-1){
                        vecpuntosj1[7]=30;
                        rlutil::locate(4,16);
                    cout<< "---------------------------***^***-----------------------------"<<endl;
                    rlutil::locate(4,17);
                    cout<< "----------------ENHORABUENA HA ANOTADO FULL!-------------------"<<endl;
                    rlutil::locate(4,18);
                    cout<< "---------------------------***^***-----------------------------"<<endl;
                    }}
        o=0;
break;
case 8:

                        if(po==true){
                    if (vecpuntosj1[8]==-1){
                        vecpuntosj1[8]=40;
                        rlutil::locate(4,16);
                    cout<< "---------------------------***^***------------------------------"<<endl;
                    rlutil::locate(4,17);
                    cout<< "------------------ENHORABUENA HA ANOTADO POKER!-----------------"<<endl;
                    rlutil::locate(4,18);
                    cout<< "---------------------------***^***------------------------------"<<endl;
                    }}

    o=0;
    break;

case 9:
    if (gene==true){
                    if (vecpuntosj1[9]==-1){
                        vecpuntosj1[9]=50;
                        rlutil::locate(4,16);
                    cout<< "---------------------------***^***------------------------------"<<endl;
                    rlutil::locate(4,17);
                    cout<< "---------------ENHORABUENA HA ANOTADO GENERALA!-----------------"<<endl;
                    rlutil::locate(4,18);
                    cout<< "---------------------------***^***------------------------------"<<endl;
                    }}


    o=0;
    break;
case 10:

    int a,xdd=1;
    system("cls");
 while (xdd!=0){
    rlutil::locate(2,2+a);

std::cout<<(char)175<<std::endl;

    mostrarVectorTabla1(vecpuntosj1, 10);

    switch(rlutil::getkey()){
case 14: ///UP

rlutil::locate(2,2+a);
std::cout<<"  "<<std::endl;
    a--;
    if(a<0){
        a=0;
    }
    break;
case 15: ///DOWN

rlutil::locate(2,2+a);
std::cout<<"  "<<std::endl;
    a++;
    if(a>9){
        a=9;
    }
    break;
case 1:

    vecpuntosj1[a]=0;
    xdd=0;
    o=0;
    break;}
}///While de xdd


}///switch y

}/// switch del movimiento de y

} ///while de O
                    ///mostrarVectorTabla(vecpuntosj1, 10);
                    rlutil::locate(4,19);
                    cout<< "-----------------------***^***--------------------------"<<endl;
                    rlutil::locate(4,20);
                    cout<< "----------------PUNTAJE TOTAL ACTUAL:"<< sumarVectorjugadores(vecpuntosj1,10)<<"--------------"<<endl;
                    rlutil::locate(4,21);
                    cout<< "-----------------------***^***--------------------------"<<endl;
                    system("pause");
                    system("cls");




}

void mostrarVectorTabla(int vec[], int tam){
    int i;
        cout<<"---------------------***TABLA FINAL DE LA RONDA***---------------------"<<endl;
    for(i=0;i<tam;i++){
        cout <<i+1<<"-"<< vec[i]<<endl;
    }

}

void mostrarVectorTabla1(int vec[], int tam){
    int i,e=2;
    rlutil::locate(4,1);
        cout<<"-----------------***TABLA PARA TACHARSE POSIBLES JUEGOS***-------------------"<<endl;
    for(i=0;i<tam;i++){
        if(vec[i]==-1){
        rlutil::locate(4,e);
        cout <<"--- #"<<i+1<<"-"<<" DISPONIBLE  ------------------"<<endl;
        e+=1;
    }
    rlutil::locate(4,12);
        cout <<"--------------------------------------------------"<<endl;
}}


/// CONTAR REPETIDOS
int contarNumerosRepetidos(int v[], int numero, int tam){
    int i, cant=0;
    for(i=0;i<tam;i++){
        if(v[i]==numero) cant++;
        }
    return cant;
}

/// SUMAAR VECTOR
int sumarVector(int v[], int tam ){
    int i, suma=0;
    for(i=0;i<tam;i++){
        suma+=v[i];
    }
    return suma;
}

/// FOR PARA SABER LA POSICION DE LOS QUE SE TIRAN DE NUEVO los guardamos en el vector posicion
void tirardenew(int vec[],int tirardenuevo){
int i;
    for (i=0;i<tirardenuevo;i++){
        vec[i];}}



/// CARGANDO EL VECTOR DEL JUGADOR 1
void CargarVectorjugador(int vecpuntosj[],int tam){
int i;
    for(i=0;i<tam;i++){
        vecpuntosj[i]=-1;}
            }





int sumarVectorjugadores(int vec[], int tam ){
    int i, puntaje=0;
    for(i=0;i<tam;i++){
        if (vec[i]!=-1){
            puntaje+=vec[i];/// ESTE ME VA A SUMAR TODOS LOS VALORES QUE NO SEAN -1 Y YA LO PONGO COMO PUNTAJE :D
        }
    }
    return puntaje;
}



#endif // FUNCIONESG_H_INCLUDED
